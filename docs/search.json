[
  {
    "objectID": "posts/data-science/python-gpx-mapping.html",
    "href": "posts/data-science/python-gpx-mapping.html",
    "title": "GPX Trail Mapping in Python",
    "section": "",
    "text": "Trail Mapping with Python\n\n\n\n\n\n\nGIS\n\n\nPython\n\n\nData Science\n\n\n\nUsing your GPX data with geopandas\n\n\n\n\n\nFeb 28, 2024\n\n\nBrian Carey\n\n\n\n\n\n\n\n\n\n\n\n\nPoints to Paths in Python\n\n\n\n\n\n\nData Science\n\n\nGIS\n\n\nPython\n\n\n\nCreating trajectories in MovingPandas\n\n\n\n\n\nFeb 3, 2025\n\n\nBrian Carey\n\n\n\n\n\n\n\n\n\n\n\n\nSpeed, Simplification and Segments\n\n\n\n\n\n\nGIS\n\n\nPython\n\n\nData Science\n\n\n\nWorking with MovingPandas\n\n\n\n\n\nFeb 25, 2025\n\n\nBrian Carey\n\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "Home",
      "Data Science",
      "GPX Trail Mapping in Python"
    ]
  },
  {
    "objectID": "posts/data-science/data-science.html",
    "href": "posts/data-science/data-science.html",
    "title": "Data Science",
    "section": "",
    "text": "Trail Mapping with Python\n\n\n\n\n\n\nGIS\n\n\nPython\n\n\nData Science\n\n\n\nUsing your GPX data with geopandas\n\n\n\n\n\nFeb 28, 2024\n\n\nBrian Carey\n\n\n\n\n\n\n\n\n\n\n\n\nObsidian and Jupyter Notebooks\n\n\n\n\n\n\nObsidian\n\n\nPython\n\n\nData Science\n\n\n\nPersonal Knowledge Management for Data Science\n\n\n\n\n\nMar 20, 2024\n\n\nBrian Carey\n\n\n\n\n\n\n\n\n\n\n\n\nPoints to Paths in Python\n\n\n\n\n\n\nData Science\n\n\nGIS\n\n\nPython\n\n\n\nCreating trajectories in MovingPandas\n\n\n\n\n\nFeb 3, 2025\n\n\nBrian Carey\n\n\n\n\n\n\n\n\n\n\n\n\nSpeed, Simplification and Segments\n\n\n\n\n\n\nGIS\n\n\nPython\n\n\nData Science\n\n\n\nWorking with MovingPandas\n\n\n\n\n\nFeb 25, 2025\n\n\nBrian Carey\n\n\n\n\n\n\nNo matching items\n\n Back to top",
    "crumbs": [
      "Home",
      "Data Science"
    ]
  },
  {
    "objectID": "posts/data-science/python-gpx-mapping/gpx-gps-data/index.html",
    "href": "posts/data-science/python-gpx-mapping/gpx-gps-data/index.html",
    "title": "Trail Mapping with Python",
    "section": "",
    "text": "In the world of Data Science, I’m most strongly drawn to geographically-linked data. Choropleth maps, for example, are about the most powerful way to convey statistical information and get a point across, if you will forgive the intolerable pun. Attaching data to geography somehow makes information more relatable, more personal, and more easily absorbable. It gives people a reference point, a “you are here”, if you will, or maybe “There, but for the grace of God…”.\nI am fortunate to live in New Mexico where I can take beautiful and varied walks, hikes and bike rides nearly every day, which I do. I record most of my excursions with an app on my phone, and I realized recently that I must have lots of data that I can play with to do mapping and analysis. I was pleased to discover that the simple app I use on my phone to track my excursions can easily export the data to GPX format. I had no idea what GPX format was then, but assumed it was some standard, so things looked promising, and off I went.\nThe data I use comes from an app called SportActive. Apps like AllTrails and Strava are wonderful, especially when exploring new places, but they are overkill IMO for simple tracking of daily, and largely repetitive, activities. SportActive simply records my walks and rides, without asking if I want to share my walk with my “friends” like a meal on Facebook. (Disclaimer: I have no financial relationship with SportActive, although if you could arrange such a thing I’d happily change this disclaimer.)\nIn this and two following articles, I will show how the data can be used with Python to map and analyze the GPS information. I will show how to do analyses such as profiling elevations, calculating speeds and durations, identifying pauses, and segmenting paths based on various criteria. This type of analysis, which I’m doing for fun, is the very same as could be used to, for example, study bird migrations or the movement of container ships.\nPython provides many libraries based around the pandas ecosystem which make working with geospatial data easy. GeoPandas extends Pandas to incorporate geometries and coordinate reference systems. GPX data is a series of geolocated points, which is easily handled by geopandas. MovingPandas facilitates turning the point geometries into “trajectories”, allowing for calculations of speed, duration and direction.\nThis article will cover parsing the raw GPS data to a csv file, which I then import into a geopandas GeoDataFrame. From that I will create maps and generate some basic statistical information about the trek such as distance and elevation profiles. These articles assume basic familiarity with Python, experience with Pandas being helpful. An expanded version of the code in the articles can be obtained from my GitHub repository at https://github.com/bisotty666/GPX.",
    "crumbs": [
      "Obsidian",
      "Data Science",
      "Python Gpx Mapping",
      "Trail Mapping with Python"
    ]
  },
  {
    "objectID": "posts/data-science/python-gpx-mapping/gpx-gps-data/index.html#introduction",
    "href": "posts/data-science/python-gpx-mapping/gpx-gps-data/index.html#introduction",
    "title": "Trail Mapping with Python",
    "section": "",
    "text": "In the world of Data Science, I’m most strongly drawn to geographically-linked data. Choropleth maps, for example, are about the most powerful way to convey statistical information and get a point across, if you will forgive the intolerable pun. Attaching data to geography somehow makes information more relatable, more personal, and more easily absorbable. It gives people a reference point, a “you are here”, if you will, or maybe “There, but for the grace of God…”.\nI am fortunate to live in New Mexico where I can take beautiful and varied walks, hikes and bike rides nearly every day, which I do. I record most of my excursions with an app on my phone, and I realized recently that I must have lots of data that I can play with to do mapping and analysis. I was pleased to discover that the simple app I use on my phone to track my excursions can easily export the data to GPX format. I had no idea what GPX format was then, but assumed it was some standard, so things looked promising, and off I went.\nThe data I use comes from an app called SportActive. Apps like AllTrails and Strava are wonderful, especially when exploring new places, but they are overkill IMO for simple tracking of daily, and largely repetitive, activities. SportActive simply records my walks and rides, without asking if I want to share my walk with my “friends” like a meal on Facebook. (Disclaimer: I have no financial relationship with SportActive, although if you could arrange such a thing I’d happily change this disclaimer.)\nIn this and two following articles, I will show how the data can be used with Python to map and analyze the GPS information. I will show how to do analyses such as profiling elevations, calculating speeds and durations, identifying pauses, and segmenting paths based on various criteria. This type of analysis, which I’m doing for fun, is the very same as could be used to, for example, study bird migrations or the movement of container ships.\nPython provides many libraries based around the pandas ecosystem which make working with geospatial data easy. GeoPandas extends Pandas to incorporate geometries and coordinate reference systems. GPX data is a series of geolocated points, which is easily handled by geopandas. MovingPandas facilitates turning the point geometries into “trajectories”, allowing for calculations of speed, duration and direction.\nThis article will cover parsing the raw GPS data to a csv file, which I then import into a geopandas GeoDataFrame. From that I will create maps and generate some basic statistical information about the trek such as distance and elevation profiles. These articles assume basic familiarity with Python, experience with Pandas being helpful. An expanded version of the code in the articles can be obtained from my GitHub repository at https://github.com/bisotty666/GPX.",
    "crumbs": [
      "Obsidian",
      "Data Science",
      "Python Gpx Mapping",
      "Trail Mapping with Python"
    ]
  },
  {
    "objectID": "posts/data-science/python-gpx-mapping/gpx-gps-data/index.html#next-steps",
    "href": "posts/data-science/python-gpx-mapping/gpx-gps-data/index.html#next-steps",
    "title": "Trail Mapping with Python",
    "section": "Next steps",
    "text": "Next steps\nI naturally want to be able to make calculations of speed and distance, identify pauses, and do other exploration. Starting from discrete points, the steps to do so manually would be simple but exceedingly tedious. Fortunately there is a wonderful library called movingpandas which makes these things all very simple. I’ll explore that in the next articles.\nI’ll go ahead and save the GeoDataFrames for future use:\ntrek_gdf.to_file('data/trek_gdf.gpkg', driver='GPKG')\ntrek_projected.to_file('data/trek_projected.gpkg', driver='GPKG')",
    "crumbs": [
      "Obsidian",
      "Data Science",
      "Python Gpx Mapping",
      "Trail Mapping with Python"
    ]
  }
]